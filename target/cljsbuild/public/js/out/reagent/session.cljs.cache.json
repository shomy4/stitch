["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$get","~$reset!","~$swap!","~$get-in"]],"~:name","~$reagent.session","~:imports",null,"~:requires",["^ ","~$reagent","~$reagent.core","^>","^>"],"~:uses",["^ ","~$atom","^>"],"~:defs",["^ ","~$assoc-in!",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","~:line",47,"~:column",7,"~:end-line",47,"~:end-column",16,"~:arglists",["~#list",["~$quote",["^K",[["~$ks","~$v"]]]]],"~:doc","Associates a value in the session, where ks is a\n   sequence of keys and v is the new value and returns\n   a new nested structure. If any levels do not exist,\n   hash-maps will be created."],"^9","~$reagent.session/assoc-in!","~:variadic",false,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",16,"~:method-params",["^K",[["^M","~$v"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^G",1,"^F",47,"^H",47,"~:max-fixed-arity",2,"~:fn-var",true,"^J",["^K",["^L",["^K",[["^M","~$v"]]]]],"^N","Associates a value in the session, where ks is a\n   sequence of keys and v is the new value and returns\n   a new nested structure. If any levels do not exist,\n   hash-maps will be created."],"~$remove!",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",42,"^G",7,"^H",42,"^I",14,"^J",["^K",["^L",["^K",[["~$k"]]]]],"^N","Remove a key from the session"],"^9","~$reagent.session/remove!","^P",false,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",14,"^Q",["^K",[["~$k"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^F",42,"^H",42,"^T",1,"^U",true,"^J",["^K",["^L",["^K",[["~$k"]]]]],"^N","Remove a key from the session"],"~$update-in!",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",80,"^G",7,"^H",80,"^I",17,"^J",["^K",["^L",["^K",[["^M","~$f","~$&","~$args"]]]]],"^N","'Updates a value in the session, where ks is a\n   sequence of keys and f is a function that will\n   take the old value along with any supplied args and return\n   the new value. If any levels do not exist, hash-maps\n   will be created.","~:top-fn",["^ ","^P",true,"^T",2,"^Q",[["^K",["^M","~$f","^Y"]]],"^J",["^K",[["^M","~$f","~$&","^Y"]]],"^S",["^K",[null]]]],"^9","~$reagent.session/update-in!","^P",true,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",17,"^Z",["^ ","^P",true,"^T",2,"^Q",[["^K",["^M","~$f","^Y"]]],"^J",["^K",[["^M","~$f","~$&","^Y"]]],"^S",["^K",[null]]],"^Q",[["^K",["^M","~$f","^Y"]]],"^R",null,"^S",["^K",[null]],"^G",1,"^F",80,"^H",80,"^T",2,"^U",true,"^J",["^K",[["^M","~$f","~$&","^Y"]]],"^N","'Updates a value in the session, where ks is a\n   sequence of keys and f is a function that will\n   take the old value along with any supplied args and return\n   the new value. If any levels do not exist, hash-maps\n   will be created."],"~$get-in!",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",62,"^G",7,"^H",62,"^I",14,"^J",["^K",["^L",["^K",[["^M","~$&",["~$default"]]]]]],"^N","Destructive get from the session. This returns the current value of the path\n  specified by the vector ks and then removes it from the session.","^Z",["^ ","^P",true,"^T",1,"^Q",[["^K",["^M",["^11"]]]],"^J",["^K",[["^M","~$&",["^11"]]]],"^S",["^K",[null]]]],"^9","~$reagent.session/get-in!","^P",true,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",14,"^Z",["^ ","^P",true,"^T",1,"^Q",[["^K",["^M",["^11"]]]],"^J",["^K",[["^M","~$&",["^11"]]]],"^S",["^K",[null]]],"^Q",[["^K",["^M",["^11"]]]],"^R",null,"^S",["^K",[null]],"^G",1,"^F",62,"^H",62,"^T",1,"^U",true,"^J",["^K",[["^M","~$&",["^11"]]]],"^N","Destructive get from the session. This returns the current value of the path\n  specified by the vector ks and then removes it from the session."],"^5",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",12,"^G",7,"^H",12,"^I",10,"^J",["^K",["^L",["^K",[["~$k","~$&",["^11"]]]]]],"^N","Get the key's value from the session, returns nil if it doesn't exist.","^Z",["^ ","^P",true,"^T",1,"^Q",[["^K",["~$k",["^11"]]]],"^J",["^K",[["~$k","~$&",["^11"]]]],"^S",["^K",[null]]]],"^9","~$reagent.session/get","^P",true,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",10,"^Z",["^ ","^P",true,"^T",1,"^Q",[["^K",["~$k",["^11"]]]],"^J",["^K",[["~$k","~$&",["^11"]]]],"^S",["^K",[null]]],"^Q",[["^K",["~$k",["^11"]]]],"^R",null,"^S",["^K",[null]],"^G",1,"^F",12,"^H",12,"^T",1,"^U",true,"^J",["^K",[["~$k","~$&",["^11"]]]],"^N","Get the key's value from the session, returns nil if it doesn't exist."],"^6",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",39,"^G",7,"^H",39,"^I",13,"^J",["^K",["^L",["^K",[["~$m"]]]]]],"^9","~$reagent.session/reset!","^P",false,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",13,"^Q",["^K",[["~$m"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^F",39,"^H",39,"^T",1,"^U",true,"^J",["^K",["^L",["^K",[["~$m"]]]]]],"~$cursor",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",7,"^G",7,"^H",7,"^I",13,"^J",["^K",["^L",["^K",[["^M"]]]]],"^N","Returns a cursor from the state atom."],"^9","~$reagent.session/cursor","^P",false,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",13,"^Q",["^K",[["^M"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^F",7,"^H",7,"^T",1,"^U",true,"^J",["^K",["^L",["^K",[["^M"]]]]],"^N","Returns a cursor from the state atom."],"~$get!",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",55,"^G",7,"^H",55,"^I",11,"^J",["^K",["^L",["^K",[["~$k","~$&",["^11"]]]]]],"^N","Destructive get from the session. This returns the current value of the key\n  and then removes it from the session.","^Z",["^ ","^P",true,"^T",1,"^Q",[["^K",["~$k",["^11"]]]],"^J",["^K",[["~$k","~$&",["^11"]]]],"^S",["^K",[null]]]],"^9","~$reagent.session/get!","^P",true,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",11,"^Z",["^ ","^P",true,"^T",1,"^Q",[["^K",["~$k",["^11"]]]],"^J",["^K",[["~$k","~$&",["^11"]]]],"^S",["^K",[null]]],"^Q",[["^K",["~$k",["^11"]]]],"^R",null,"^S",["^K",[null]],"^G",1,"^F",55,"^H",55,"^T",1,"^U",true,"^J",["^K",[["~$k","~$&",["^11"]]]],"^N","Destructive get from the session. This returns the current value of the key\n  and then removes it from the session."],"~$state",["^ ","^9","~$reagent.session/state","^E","target/cljsbuild/public/js/out/reagent/session.cljs","^F",5,"^G",1,"^H",5,"^I",11,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",5,"^G",6,"^H",5,"^I",11],"~:tag","~$any"],"^7",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",28,"^G",7,"^H",28,"^I",12,"^J",["^K",["^L",["^K",[["~$f","~$&","^Y"]]]]],"^N","Replace the current session's value with the result of executing f with\n  the current value and args.","^Z",["^ ","^P",true,"^T",1,"^Q",[["^K",["~$f","^Y"]]],"^J",["^K",[["~$f","~$&","^Y"]]],"^S",["^K",[null]]]],"^9","~$reagent.session/swap!","^P",true,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",12,"^Z",["^ ","^P",true,"^T",1,"^Q",[["^K",["~$f","^Y"]]],"^J",["^K",[["~$f","~$&","^Y"]]],"^S",["^K",[null]]],"^Q",[["^K",["~$f","^Y"]]],"^R",null,"^S",["^K",[null]],"^G",1,"^F",28,"^H",28,"^T",1,"^U",true,"^J",["^K",[["~$f","~$&","^Y"]]],"^N","Replace the current session's value with the result of executing f with\n  the current value and args."],"~$clear!",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",34,"^G",7,"^H",34,"^I",13,"^J",["^K",["^L",["^K",[[]]]]],"^N","Remove all data from the session and start over cleanly."],"^9","~$reagent.session/clear!","^P",false,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",13,"^Q",["^K",[[]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^F",34,"^H",34,"^T",0,"^U",true,"^J",["^K",["^L",["^K",[[]]]]],"^N","Remove all data from the session and start over cleanly."],"~$update!",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",70,"^G",7,"^H",70,"^I",14,"^J",["^K",["^L",["^K",[["~$k","~$f","~$&","^Y"]]]]],"^N","Updates a value in session where k is a key and f\n   is the function that takes the old value along with any\n   supplied args and return the new value. If key is not\n   present it will be added.","^Z",["^ ","^P",true,"^T",2,"^Q",[["^K",["~$k","~$f","^Y"]]],"^J",["^K",[["~$k","~$f","~$&","^Y"]]],"^S",["^K",[null]]]],"^9","~$reagent.session/update!","^P",true,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",14,"^Z",["^ ","^P",true,"^T",2,"^Q",[["^K",["~$k","~$f","^Y"]]],"^J",["^K",[["~$k","~$f","~$&","^Y"]]],"^S",["^K",[null]]],"^Q",[["^K",["~$k","~$f","^Y"]]],"^R",null,"^S",["^K",[null]],"^G",1,"^F",70,"^H",70,"^T",2,"^U",true,"^J",["^K",[["~$k","~$f","~$&","^Y"]]],"^N","Updates a value in session where k is a key and f\n   is the function that takes the old value along with any\n   supplied args and return the new value. If key is not\n   present it will be added."],"~$put!",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",19,"^G",7,"^H",19,"^I",11,"^J",["^K",["^L",["^K",[["~$k","~$v"]]]]]],"^9","~$reagent.session/put!","^P",false,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",11,"^Q",["^K",[["~$k","~$v"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^F",19,"^H",19,"^T",2,"^U",true,"^J",["^K",["^L",["^K",[["~$k","~$v"]]]]]],"^8",["^ ","^C",null,"^D",["^ ","^E","/home/milos/workspace/stitch/target/cljsbuild/public/js/out/reagent/session.cljs","^F",22,"^G",7,"^H",22,"^I",13,"^J",["^K",["^L",["^K",[["^M","~$&",["^11"]]]]]],"^N","Gets the value at the path specified by the vector ks from the session,\n  returns nil if it doesn't exist.","^Z",["^ ","^P",true,"^T",1,"^Q",[["^K",["^M",["^11"]]]],"^J",["^K",[["^M","~$&",["^11"]]]],"^S",["^K",[null]]]],"^9","~$reagent.session/get-in","^P",true,"^E","target/cljsbuild/public/js/out/reagent/session.cljs","^I",13,"^Z",["^ ","^P",true,"^T",1,"^Q",[["^K",["^M",["^11"]]]],"^J",["^K",[["^M","~$&",["^11"]]]],"^S",["^K",[null]]],"^Q",[["^K",["^M",["^11"]]]],"^R",null,"^S",["^K",[null]],"^G",1,"^F",22,"^H",22,"^T",1,"^U",true,"^J",["^K",[["^M","~$&",["^11"]]]],"^N","Gets the value at the path specified by the vector ks from the session,\n  returns nil if it doesn't exist."]],"~:require-macros",["^ ","^=","^>","^>","^>"],"^N",null]